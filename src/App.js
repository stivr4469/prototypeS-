import React, { useState } from 'react';
// –ò–º–ø–æ—Ä—Ç—ã
import TheoryBlock from './components/TheoryBlock';
import FillInTheBlank from './components/FillInTheBlank';
import MultipleChoice from './components/MultipleChoice';
import ClassifyItems from './components/ClassifyItems';
import InlineChoice from './components/InlineChoice';
// üëá 1. –ò–ú–ü–û–†–¢–ò–†–£–ï–ú –ù–û–í–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢
import SentenceBuilder from './components/SentenceBuilder';
import './App.css';
import FillFromBank from './components/FillFromBank';
import FillInTheBlanksComplex from './components/FillInTheBlanksComplex';




// –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
const componentMapping = {
  TheoryBlock,
  FillInTheBlank,
  MultipleChoice,
  ClassifyItems,
  InlineChoice,
  FillFromBank,
  SentenceBuilder,
  FillInTheBlanksComplex,
  
};
// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —É—Ä–æ–∫–∞
const LessonView = ({ lessonData, onBack }) => (
  <div>
    <header>
      <button onClick={onBack} style={{ float: 'right' }}>‚Üê –ö —Å–ø–∏—Å–∫—É —É—Ä–æ–∫–æ–≤</button>
      <h1>{lessonData.title}</h1>
    </header>
    <main>
      {/* üëá –í–æ—Ç –∑–¥–µ—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞! */}
      {lessonData.components && lessonData.components.map((componentData, index) => {
        const Component = componentMapping[componentData.type];
        if (!Component) {
          return <div key={index}>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞: {componentData.type}</div>;
        }
        return <Component key={index} {...componentData} />;
      })}
    </main>
  </div>
);
// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —É—Ä–æ–∫–æ–≤
const LessonMenu = ({ onSelectLesson }) => {
  // –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å 14 —É—Ä–æ–∫–æ–≤
  const lessonIds = Array.from({ length: 126 }, (_, i) => i + 1);
  return (
    <div>
      <header>
        <h1>–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫</h1>
      </header>
      <div className="lesson-menu">
        {lessonIds.map(id => (
          <button className="lesson-button" key={id} onClick={() => onSelectLesson(id)}>
            –£—Ä–æ–∫ {id}
          </button>
        ))}
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function App() {
  const [currentLesson, setCurrentLesson] = useState(null);
  const [isLoading, setIsLoading] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞
  const loadLesson = (lessonId) => {
    setIsLoading(true);
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å JSON —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –æ–Ω –Ω—É–∂–µ–Ω
    import(`./data/U${lessonId}.json`)
      .then(lessonModule => {
        setCurrentLesson(lessonModule.default);
      })
      .catch(err => {
        console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Ä–æ–∫:", err);
        alert(`–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –£—Ä–æ–∫–∞ ${lessonId} –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤.`);
      })
      .finally(() => {
        setIsLoading(false);
      });
  };

  const handleBackToMenu = () => {
    setCurrentLesson(null);
  };

  return (
    <div className="App">
      {isLoading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : currentLesson ? (
        <LessonView lessonData={currentLesson} onBack={handleBackToMenu} />
      ) : (
        <LessonMenu onSelectLesson={loadLesson} />
      )}
    </div>
  );
}

export default App;
