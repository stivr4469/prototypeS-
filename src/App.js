import React, { useState } from 'react';
import Lesson from './components/Lesson';
import LessonMenu from './components/LessonMenu';
import WelcomeScreen from './components/WelcomeScreen';
import './App.css';

// üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º useProgress –∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞
import { useProgress } from './hooks/useProgress';

function App() {
  const [showWelcome, setShowWelcome] = useState(true);
  const [currentLessonId, setCurrentLessonId] = useState(null);
  const [currentLessonData, setCurrentLessonData] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  
  // üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –≤–∞—à —Ö—É–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const { isCompleted, markAsCompleted, resetProgress } = useProgress();

  // üëá –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ ID —É—Ä–æ–∫–æ–≤
  const lessonIds = Array.from({ length: 126 }, (_, i) => `U${i + 1}`);

  const loadLesson = (lessonId) => {
    setIsLoading(true);
    setCurrentLessonData(null);
    setCurrentLessonId(lessonId);
    import(`./data/${lessonId}.json`)
      .then(module => {
        setCurrentLessonData(module.default);
        // –û—Ç–º–µ—á–∞–µ–º —É—Ä–æ–∫ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –ø—Ä–∏ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–µ
        markAsCompleted(lessonId); 
      })
      .catch(err => {
        console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Ä–æ–∫:", err);
        alert(`–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –£—Ä–æ–∫–∞ ${lessonId.match(/(\d+)/)[0]} –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤.`);
        setCurrentLessonId(null);
      })
      .finally(() => {
        setIsLoading(false);
      });
  };

  const handleStart = () => {
    setShowWelcome(false);
  };

  const handleBackToMenu = () => {
    setCurrentLessonId(null);
    setCurrentLessonData(null);
  };

  const handleNavigation = (direction) => {
    const currentIndex = lessonIds.indexOf(currentLessonId);
    if (currentIndex === -1) return;
    const nextIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;
    if (nextIndex >= 0 && nextIndex < lessonIds.length) {
      const nextLessonId = lessonIds[nextIndex];
      loadLesson(nextLessonId);
    }
  };
  
  // –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const renderContent = () => {
    if (showWelcome) {
      return <WelcomeScreen onStart={handleStart} />;
    }
    if (isLoading) {
      return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
    }
    if (currentLessonData) {
      return (
        <Lesson
          lessonData={currentLessonData}
          onBack={handleBackToMenu}
          onNavigate={handleNavigation} // –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
          isLastLesson={lessonIds.indexOf(currentLessonId) === lessonIds.length - 1}
        />
      );
    }
    // üëá –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º lessonIds –∏ –¥—Ä—É–≥–∏–µ –Ω—É–∂–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –≤ LessonMenu
    return (
        <LessonMenu
            onSelectLesson={loadLesson}
            lessonIds={lessonIds}
            isCompleted={isCompleted}
            onResetProgress={resetProgress}
        />
    );
  };

  return (
    <div className="App">
      {renderContent()}
    </div>
  );
}

export default App;
