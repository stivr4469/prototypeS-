import React from 'react';
// –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import TheoryBlock from './TheoryBlock';
import FillInTheBlank from './FillInTheBlank';
import FillInTheBlanksComplex from './FillInTheBlanksComplex';
import MultipleChoice from './MultipleChoice'; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–º–ø–æ—Ä—Ç –Ω–∞ –º–µ—Å—Ç–µ
import InlineChoice from './InlineChoice';
// –ò –¥—Ä—É–≥–∏–µ –≤–∞—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
import ClassifyItems from './ClassifyItems';
import DescribeImage from './DescribeImage';
import FillFromBank from './FillFromBank';
import SentenceBuilder from './SentenceBuilder';

// üëá –í–û–¢ –ó–î–ï–°–¨ –ë–´–õ–ê –û–®–ò–ë–ö–ê. –Ø –í–û–°–°–¢–ê–ù–û–í–ò–õ –ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö üëá
const componentMapping = {
  TheoryBlock,
  FillInTheBlank,
  FillInTheBlanksComplex,
  MultipleChoice,
  InlineChoice,
  ClassifyItems,
  DescribeImage,
  FillFromBank,
  SentenceBuilder,
};

const Lesson = ({ lessonData, onBack, onNavigate, lessonId, isLastLesson, saveLessonResult }) => {
  const [showResults, setShowResults] = React.useState(false);
  const exerciseResults = React.useRef({});

  const getLessonNumber = (id) => (id ? id.match(/U(\d+)/)[1] : '');

  const handleExerciseCheck = (id, result) => {
    exerciseResults.current[id] = result;
  };

  const calculateFinalScore = () => {
    let totalQuestions = 0;
    let totalCorrect = 0;

    Object.values(exerciseResults.current).forEach(result => {
      totalQuestions += result.total;
      totalCorrect += result.correct;
    });

    if (totalQuestions === 0) return 0;
    const percentage = (totalCorrect / totalQuestions) * 100;

    if (percentage > 80) return 3;
    if (percentage > 40) return 2;
    if (percentage > 0) return 1; // –î–∞–µ–º 1 –∑–≤–µ–∑–¥—É –¥–∞–∂–µ –∑–∞ 1 –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    return 0; // 0 –∑–≤–µ–∑–¥, –µ—Å–ª–∏ –≤—Å–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
  };

  const finishLesson = () => {
    const stars = calculateFinalScore();
    saveLessonResult(lessonId, stars);
    setShowResults(true); 
    alert(`–£—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω! –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${stars} ${stars === 1 ? '–∑–≤–µ–∑–¥—É' : (stars > 1 && stars < 5 ? '–∑–≤–µ–∑–¥—ã' : '–∑–≤–µ–∑–¥')}.`);
  };

  const renderComponent = (componentData, index) => {
    const Component = componentMapping[componentData.type];
    if (!Component) {
      return <div key={index} style={{color: 'red', margin: '20px 0'}}><strong>–û—à–∏–±–∫–∞:</strong> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞: {componentData.type}</div>;
    }
    // –ü–µ—Ä–µ–¥–∞–µ–º callback-—Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞–∂–¥–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
    return <Component key={index} onCheck={(result) => handleExerciseCheck(`${lessonId}-${index}`, result)} {...componentData} />;
  };

  return (
    <div>
      <header className="lesson-header">
        <h1>{lessonData.title}</h1>
        <button onClick={onBack} className="back-button">‚Üê –ö —Å–ø–∏—Å–∫—É —É—Ä–æ–∫–æ–≤</button>
      </header>
      <main>
        {lessonData.components && lessonData.components.map((componentData, index) => renderComponent(componentData, index))}
      </main>
      <footer className="lesson-footer">
        <button className="nav-button prev" onClick={() => onNavigate('prev')} disabled={getLessonNumber(lessonId) === '1'}>–ü—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–∫</button>
        <button className="finish-lesson-button" onClick={finishLesson}>–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫</button>
        <button className="nav-button next" onClick={() => onNavigate('next')} disabled={isLastLesson}>–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫</button>
      </footer>
    </div>
  );
};

export default Lesson;
