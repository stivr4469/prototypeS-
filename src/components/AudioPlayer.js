import React from 'react';

const AudioPlayer = ({ textToSpeak }) => {
  if (!textToSpeak) {
    return null;
  }

  const speak = () => {
    if (!('speechSynthesis' in window)) {
      alert("–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏.");
      return;
    }

    // üëá –ù–û–í–ê–Ø, –ë–û–õ–ï–ï –ù–ê–î–ï–ñ–ù–ê–Ø –õ–û–ì–ò–ö–ê –û–ß–ò–°–¢–ö–ò üëá
    // 1. –£–±–∏—Ä–∞–µ–º HTML-—Ç–µ–≥–∏.
    let cleanText = textToSpeak.replace(/<[^>]*>?/gm, '');
    // 2. –£–±–∏—Ä–∞–µ–º –≤—Å–µ, —á—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±—É–∫–≤–∞–º–∏, —Ü–∏—Ñ—Ä–∞–º–∏, –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏–ª–∏ –∑–∞–ø—è—Ç—ã–º–∏.
    cleanText = cleanText.replace(/[^a-zA-Z0-9\s,√±√°√©√≠√≥√∫√º]/g, ' ');
    // 3. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã.
    cleanText = cleanText.replace(/\s+/g, ' ').trim();

    if (!cleanText) {
      return; // –ù–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏–º, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å
    }
    
    const utterance = new SpeechSynthesisUtterance(cleanText);
    utterance.lang = 'es-ES';
    utterance.rate = 0.9;

    speechSynthesis.cancel();
    speechSynthesis.speak(utterance);
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞ –∏—Å–ø–∞–Ω—Å–∫–æ–º –¥–ª—è –æ–∑–≤—É—á–∫–∏
  const spanishContent = textToSpeak.replace(/<[^>]*>?/gm, '').replace(/[–∞-—è–ê-–Ø—ë–Å]/g, '').trim();
  if (!spanishContent) {
    return null; // –ï—Å–ª–∏ –Ω–µ—Ç –∏—Å–ø–∞–Ω—Å–∫–∏—Ö —Å–ª–æ–≤, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
  }

  return (
    <button onClick={speak} className="audio-button">
      üîä
    </button>
  );
};

export default AudioPlayer;
