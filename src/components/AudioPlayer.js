import React from 'react';

const AudioPlayer = ({ text, speechText }) => {
  const speak = (textToSpeak) => {
    if (!('speechSynthesis' in window)) {
      alert("–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏.");
      return;
    }

    // 1. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    // 2. –ï—Å–ª–∏ –Ω–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –æ—á–∏—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –æ—Ç HTML –∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
    const textForSpeech = speechText || text.replace(/<[^>]*>?/gm, '').replace(/[–∞-—è–ê-–Ø—ë–Å]/g, '');

    // –ù–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏–º, –µ—Å–ª–∏ –≤ –∏—Ç–æ–≥–µ –æ—Å—Ç–∞–ª–∞—Å—å –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    if (!textForSpeech.trim()) {
      return;
    }
    
    const utterance = new SpeechSynthesisUtterance(textForSpeech);
    utterance.lang = 'es-ES';
    utterance.rate = 0.9;

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    speechSynthesis.cancel();
    speechSynthesis.speak(utterance);
  };

  return (
    <button onClick={() => speak(text)} className="audio-button">
      üîä
    </button>
  );
};

export default AudioPlayer;
